#include<iostream>
using namespace std;








//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
void min_heap(int tree[], int t_ln) {
	
	for (int mid = t_ln / 2;mid > 0;mid--) {
		int c_in, mid_el;
		mid_el = tree[mid];
		c_in = 2 * mid;
		while (c_in <= t_ln) {
			if (c_in < t_ln && tree[c_in + 1] < tree[c_in]) {
				c_in = c_in + 1;
			}				
			if (mid_el < tree[c_in])
			{
				break;
			}
			else if (mid_el >= tree[c_in]) 
			{
				tree[c_in / 2] = tree[c_in];
				c_in = 2 * c_in;
			}
		}
		tree[c_in / 2] = mid_el;
	}
}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------


void print(int tree[], int t_ln) {
	for (int i = 1;i <= t_ln;i++) {
		cout << tree[i]<<endl;
	}	
}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
void height(int t_ln) {
	int h=0;
	while (t_ln > 1) {
		t_ln = t_ln / 2;
		h++;
	}
	cout << "Height of the tree is " << h << endl;
}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
void size(int t_ln) {
	cout << "Size of the tree is " << t_ln << endl;
}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
void isEmpty(int t_ln) {
	if (t_ln == 0) {
		cout << "Tree is empty!" << endl;
	}
	else {
		cout << "Tree is not empty!" << endl;
	}
}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
void top(int tree[],int t_ln) {
	if (t_ln == 0) {
		cout << "Tree is empty!" << endl;
	}
	else {
		cout << "Top of tree is " << tree[1] << endl;
	}
}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
int main() {
	int tree[100];
	int fun_no,t_ln;
	cout << "Enter no of elements:";
	cin >> t_ln;
	for (int i = 1;i <= t_ln;i++) {
		cout << "Enter element:";
		cin >> tree[i];
	}
	min_heap(tree, t_ln);
	cout << "List of functions:";
	cout<< "1: Top" << endl 
		<< "2: Pop" << endl 
		<< "3: Push" << endl 
		<< "4: isEmpty" << endl 
		<< "5: size" << endl
		<< "6: height" << endl 
		<< "7: print"<<endl;
	cout << "Which function you want to perform:";
	cin >> fun_no;
	switch (fun_no)
	{
	case 1:
		top(tree,t_ln);
		break;
	case 2:
		break;
	case 3:
		break;
	case 4:
		isEmpty(t_ln);
		break;
	case 5:
		size(t_ln);
		break;
	case 6:
		height(t_ln);
		break;
	case 7:
		print(tree, t_ln);
		break;
	}
	getchar();
	getchar();
	getchar();
	return 0;
}